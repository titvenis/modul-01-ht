class Book:
    def __init__(self, title, author, isbn, copies):
        self.title = title
        self.author = author
        self.isbn = isbn
        self.copies = copies

    def __str__(self):
        return f"'{self.title}' by {self.author} (ISBN: {self.isbn}), Copies: {self.copies}"

class Reader:
    def __init__(self, name, reader_id):
        self.name = name
        self.reader_id = reader_id
        self.borrowed_books = []

    def borrow_book(self, book):
        self.borrowed_books.append(book)

    def return_book(self, book):
        self.borrowed_books.remove(book)

class Library:
    def __init__(self):
        self.books = []
        self.readers = []

    def add_book(self, book):
        self.books.append(book)

    def remove_book(self, isbn):
        self.books = [book for book in self.books if book.isbn != isbn]

    def register_reader(self, reader):
        self.readers.append(reader)

    def issue_book(self, reader_id, isbn):
        reader = next((r for r in self.readers if r.reader_id == reader_id), None)
        book = next((b for b in self.books if b.isbn == isbn and b.copies > 0), None)

        if reader and book:
            reader.borrow_book(book)
            book.copies -= 1

    def return_book(self, reader_id, isbn):
        reader = next((r for r in self.readers if r.reader_id == reader_id), None)
        book = next((b for b in self.books if b.isbn == isbn), None)

        if reader and book:
            reader.return_book(book)
            book.copies += 1
